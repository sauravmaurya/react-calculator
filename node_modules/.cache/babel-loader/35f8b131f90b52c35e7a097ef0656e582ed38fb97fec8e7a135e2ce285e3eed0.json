{"ast":null,"code":"var _jsxFileName = \"/Users/saurav/Desktop/Code/React/Code/calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport './styles.css';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERTAION: 'choose-operation',\n  EVALUATE: 'evaluate',\n  DELETE_DIGIT: 'delete-digit',\n  CLEAR: 'clear'\n};\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n  // eslint-disable-next-line default-case\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (payload === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload}`\n      };\n    case ACTIONS.CHOOSE_OPERTAION:\n      let regex = /[/*+-]/;\n      if (state.previousOperand == null && state.currentOperand == null) {\n        return state;\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n      if (regex.test(state.previousOperand + state.operation) && state.currentOperand == null) {\n        console.log(\"regex\");\n        return state;\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: state.operation,\n        currentOperand: null\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    //return empty state\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  switch (operation) {\n    case \"/\":\n      return Number(currentOperand) / Number(previousOperand);\n    case \"*\":\n      return Number(currentOperand) * Number(previousOperand);\n    case \"+\":\n      return currentOperand + previousOperand;\n    case \"-\":\n      return currentOperand - previousOperand;\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previous-operand\",\n          children: [previousOperand, operation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-operand\",\n          children: currentOperand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"span-two\",\n        onClick: () => dispatch({\n          type: ACTIONS.CLEAR\n        }),\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"DEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        operation: \"/\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"1\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"2\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"3\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        operation: \"*\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"4\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"5\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"6\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        operation: \"+\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"7\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"8\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"9\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n        operation: \"-\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \".\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n        digit: \"0\",\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"span-two\",\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"U3IK2u6L5w8LChD4hEs3C1yVO5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","DigitButton","OperationButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ACTIONS","ADD_DIGIT","CHOOSE_OPERTAION","EVALUATE","DELETE_DIGIT","CLEAR","reducer","state","_ref","type","payload","currentOperand","includes","regex","previousOperand","operation","test","console","log","evaluate","_ref2","prev","parseFloat","current","Number","App","_s","dispatch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","digit","_c","$RefreshReg$"],"sources":["/Users/saurav/Desktop/Code/React/Code/calculator/src/App.js"],"sourcesContent":["import React, { useReducer } from 'react'\nimport './styles.css';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\n\nexport const ACTIONS = {\n    ADD_DIGIT: 'add-digit',\n    CHOOSE_OPERTAION: 'choose-operation',\n    EVALUATE: 'evaluate',\n    DELETE_DIGIT: 'delete-digit',\n    CLEAR: 'clear'\n}\n\nfunction reducer(state, { type, payload }) {\n    // eslint-disable-next-line default-case\n    switch (type) {\n        case ACTIONS.ADD_DIGIT:\n            if (payload === \"0\" && state.currentOperand === \"0\") {\n                return state\n            }\n            if (payload === \".\" && state.currentOperand.includes(\".\")) {\n                return state\n            }\n            return {\n                ...state,\n                currentOperand: `${state.currentOperand || \"\"}${payload}`\n            }\n\n        case ACTIONS.CHOOSE_OPERTAION:\n            let regex = /[/*+-]/\n            if (state.previousOperand == null && state.currentOperand == null) {\n                return state\n            }\n            if (state.previousOperand == null) {\n                return {\n                    ...state,\n                    operation: payload,\n                    previousOperand: state.currentOperand,\n                    currentOperand: null\n                }\n            }\n            if (regex.test(state.previousOperand + state.operation) && state.currentOperand == null) {\n                console.log(\"regex\")\n                return state\n            }\n\n            return {\n                ...state,\n                previousOperand: evaluate(state),\n                operation: state.operation,\n                currentOperand: null,\n            }\n\n        case ACTIONS.CLEAR:\n            return {} //return empty state\n    }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n    const prev = parseFloat(previousOperand)\n    const current = parseFloat(currentOperand)\n    switch (operation) {\n        case \"/\":\n            return Number(currentOperand) / Number(previousOperand)\n        case \"*\":\n            return Number(currentOperand) * Number(previousOperand)\n        case \"+\":\n            return currentOperand + previousOperand\n        case \"-\":\n            return currentOperand - previousOperand\n    }\n}\n\n\nfunction App() {\n\n    const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(reducer, {})\n\n    return (\n        <>\n            <div className='calculator-grid'>\n                <div className='output'>\n                    <div className=\"previous-operand\">{previousOperand}{operation}</div>\n                    <div className=\"current-operand\">{currentOperand}</div>\n                </div>\n                <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.CLEAR })}>AC</button>\n                <button>DEL</button>\n                <OperationButton operation=\"/\" dispatch={dispatch}></OperationButton>\n                <DigitButton digit=\"1\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\n                <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\n                <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\n                <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\n                <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\n                <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\n                <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\n                <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\n                <button className='span-two'>=</button>\n            </div>\n        </>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}